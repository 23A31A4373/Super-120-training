#find min
def find_min(index, nums):
    if index == len(nums)-1:
        return nums[index]
    min = find_min(index+1, nums)
    min_val = nums[index] if nums[index] < min else min
    return min_val
nums = [2,5,1,7]
res = find_min(0, nums)
print(res)


#find min and max together
def find_min(index, nums):
    if index == len(nums)-1:
        return nums[index], nums[index]
    min,max = find_min(index+1, nums)
    min_val = nums[index] if nums[index] < min else min
    max_val = nums[index] if nums[index] > max else max
    return min_val, max_val
nums = [2,5,1,7]
res = find_min(0, nums)
print(res)

#find sum of integer using recursion
def sumofint(n):
    if n<10:
        return n
    return n%10 + sumofint(n//10)
n=12345
res = sumofint(n)
print(res)

#find count of an integer
def countint(n):
    if n<10:
        return 1
    return 1 + countint(n//10)
n=17524
res=countint(n)
print(res)


#check if a given list is sorted
def is_sorted(n, index == 0):
    if index == len(n)-1:
        return True
    if n[index] > n[index+1]:
        return False
    return is_sorted(n, index+1)
n= [2,1,3,6,8]
print(is_sorted(n))

#using and operator
def is_sorted(index, n):
    if index == len(n)-1:
        return True
    return (n[index] > n[index+1] and is_sorted(index+1, n))
n = [2,1,3,6,8]
res = is_sorted(0, n)
print(res)
